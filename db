#!/bin/sh
# DESCRIPTION
#   Starts a database client
#
# SYNOPSIS
#   db [options] [--] [arg ...]
# 
# OPTIONS:
#
#   Option          Parameter       Usage
#   --------------  --------------  --------------------------------------------
#   -h|--help                       Show this help
#   -C|--context    <context>       Kubernetes context. Inferred from kubectl.
#   -i|--image      <image>         Database client image.
#   -c|--command    psql|pgdump|... Command to execute. Default: psql.
#   -h|--host       <host>          Database host.
#   -d|--database   <database>      Database name.
#   -U|--user       <user>          Database user.
#   -p|--port       <port>          Database port. Defaut: 5432.
#   --              <args>          Additional arguments passed to the command.
#
# EXIT STATUS:
#   Returns success unless an invalid option is given.

usage()
{
    sed -ne '/^#/!q;s/.\{1,2\}//;1d;p' < "$0"
}

preprocess_ars()
{
    # Pre-process options to:
    # - expand -xyz into -x -y -z
    # - expand --longopt=arg into --longopt arg
    ARGV=()
    while [[ $# -gt 0 ]]; do
        arg="$1"; shift
        case "${arg}" in
            --)     ARGV+=("$@")
                    break ;;
            --*=*)  ARGV+=("${arg%%=*}" "${arg#*=}")
                    ;;
            --*)    ARGV+=("$arg")
                    ;;
            -*)     for i in $(seq 2 ${#arg}); do
                        ARGV+=("-${arg:i-1:1}")
                    done
                    ;;
            *)      ARGV+=("$arg")
                    ;;
        esac
    done

    # Apply pre-processed options
    set -- "${ARGV[@]}"
}

CONTEXT=$(kubectl config current-context)
IMAGE=
COMMAND=psql
DB_HOST=
DB_NAME=
DB_PORT=5432
POSITIONAL=()

preprocess_ars
while [[ $# -gt 0 ]]; do
  key="$1"; shift
  case $key in
    -h|--help)      usage
                    exit ;;
    -C|--context)   CONTEXT="$1"
                    ;;
    -i|--image)     IMAGE="$1"
                    ;;
    -c|--command)   COMMAND="$1"
                    ;;
    -h|--host)      DB_HOST="$1"
                    ;;
    -d|--database)  DB_NAME="$1"
                    ;;
    -U|--user)      DB_USER="$1"
                    ;;
    -p|--port)      DB_PORT="$1"
                    ;;
    -r|--region)    AWS_REGION="$1"
                    ;;
    -m|--mode)      MODE="$1"
                    ;;
    --)             POSITIONAL+=("$@")
                    break ;;
    *)              POSITIONAL+=("$key $1")
                    ;;
  esac
  shift
done

set -- "${POSITIONAL[@]}"

POD_NAME=db-client-$USER-$(cat /dev/urandom | tr -dc 'a-z0-9' | head -c5)

case $COMMAND in
    psql|pg_dump)
        COMMAND+=" -h $DB_HOST -U $DB_USER -d $DB_NAME -p $DB_PORT"
        ;;
esac

POSTGRES_PASSWORD=$(kubectl get secret postgres-secret-config --context $CONTEXT \
  -o jsonpath="{.data.postgres-password}" | base64 --decode)

kubectl run $POD_NAME -i --tty --rm --quiet --restart='Never' \
     --context $CONTEXT --image $IMAGE \
     --env="PGPASSWORD=$POSTGRES_PASSWORD" --env=TERM=linux \
     -- ${COMMAND} "$@"